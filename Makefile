# Makefile –¥–ª—è Flask + Jinja2 –ø—Ä–æ–µ–∫—Ç–∞
# ---------------------------------------------------
# Targets:
#   venv     ‚Äî —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
#   install  ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt
#   run      ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å dev-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 5006
#   kill-port ‚Äî —É–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5006)
#   kill-all-ports ‚Äî —É–±–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –≤—Å–µ—Ö –ø–æ—Ä—Ç–∞—Ö
#   freeze   ‚Äî –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
#   clean    ‚Äî —É–¥–∞–ª–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∫—ç—à
#   docker-dev ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë –≤ Docker (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
#   docker-prod ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë –≤ Docker (–ø—Ä–æ–¥–∞–∫—à–Ω)
#   docker-stop ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
#   docker-clean ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã
# ---------------------------------------------------

# Shell
SHELL := /bin/bash

# –ò–º—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
VENV := .venv

# Python-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –≤–Ω—É—Ç—Ä–∏ venv
PY := $(VENV)/bin/python
PIP := $(VENV)/bin/pip
FLASK := $(VENV)/bin/flask

# –§–∞–π–ª —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
REQ := requirements.txt

# –ü–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_PORT := 5006

.PHONY: all venv install run kill-port kill-all-ports freeze clean help setup dev test test-unit test-integration docker-dev docker-prod docker-stop docker-clean docker-build docker-run docker-compose-up docker-compose-down init-db seed-db

all: venv install run

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

venv: ## –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "‚öôÔ∏è  –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .venv..."
	@python3 -m venv .venv
	@echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ."

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt..."
	@.venv/bin/pip install --upgrade pip
	@.venv/bin/pip install -r requirements.txt
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "üî´ –û—á–∏—â–∞–µ–º –ø–æ—Ä—Ç $(DEFAULT_PORT)..."
	@lsof -ti:$(DEFAULT_PORT) | xargs kill -9 2>/dev/null || true
	@echo "‚úÖ –ü–æ—Ä—Ç $(DEFAULT_PORT) —Å–≤–æ–±–æ–¥–µ–Ω."
	@echo "üöÄ –ó–∞–ø—É—Å–∫ Flask –Ω–∞ –ø–æ—Ä—Ç—É $(DEFAULT_PORT)..."
	@echo "# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
	@echo "FLASK_APP=run.py \\"
	@echo "        FLASK_ENV=development \\"
	@echo "        FLASK_RUN_PORT=$(DEFAULT_PORT) \\"
	@echo "        .venv/bin/flask run"
	@FLASK_APP=run.py \
		FLASK_ENV=development \
		FLASK_RUN_PORT=$(DEFAULT_PORT) \
		.venv/bin/flask run

setup: install init-db seed-db ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞

dev: setup run ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@.venv/bin/python -m pytest tests/ -v

test-unit: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å unit —Ç–µ—Å—Ç—ã
	@.venv/bin/python -m pytest tests/unit/ -v

test-integration: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å integration —Ç–µ—Å—Ç—ã
	@.venv/bin/python -m pytest tests/integration/ -v

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Python
	@find . -type d -name "__pycache__" -exec rm -rf {} +
	@find . -type f -name "*.pyc" -delete

# Docker –∫–æ–º–∞–Ω–¥—ã
docker-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë –≤ Docker (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
	@echo "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Docker (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)..."
	@docker-compose up --build -d
	@echo "‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	@sleep 10
	@echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:$(DEFAULT_PORT)"
	@echo "üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ localhost:5432"
	@echo "üîç –õ–æ–≥–∏: docker-compose logs -f"

docker-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë –≤ Docker (–ø—Ä–æ–¥–∞–∫—à–Ω)
	@echo "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Docker (–ø—Ä–æ–¥–∞–∫—à–Ω)..."
	@FLASK_ENV=production docker-compose -f docker-compose.yml up --build -d
	@echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ"

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
	@docker-compose down
	@echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

docker-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã
	@echo "üßπ –û—á–∏—â–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã..."
	@docker-compose down -v --rmi all
	@docker system prune -f
	@echo "‚úÖ Docker –æ—á–∏—â–µ–Ω"

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@docker-compose logs -f

docker-shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@docker-compose exec web bash

docker-db-shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@docker-compose exec db psql -U postgres -d jinja_app

# –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–º–∞–Ω–¥—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@docker build -t jinja-app .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	@docker run -p $(DEFAULT_PORT):$(DEFAULT_PORT) jinja-app

docker-compose-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å Docker Compose
	@docker-compose up --build

docker-compose-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose
	@docker-compose down

# ----------------------------------------------------------
# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
# make migrate-init ‚Äî –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
# make migrate-create ‚Äî —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é
# make migrate ‚Äî –ø—Ä–∏–º–µ–Ω–∏—Ç—å
# make migrate-downgrade ‚Äî –æ—Ç–∫–∞—Ç–∏—Ç—å
# –ü–æ—Ä—è–¥–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π:
# –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏ make migrate-init-docker
# –ü–æ—Ç–æ–º make migrate-create-docker
# –ó–∞—Ç–µ–º make migrate-docker

init-db: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	@FLASK_APP=run.py .venv/bin/flask init-db

seed-db: ## –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–ª–æ–∫–∞–ª—å–Ω–æ)
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask seed-db

seed-db-docker: ## –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –≤ Docker
	@docker-compose exec web flask seed-db

migrate-init: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Flask-Migrate (—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É migrations)
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask db init

migrate-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask db migrate -m "Auto migration"

migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic/Flask-Migrate (–ª–æ–∫–∞–ª—å–Ω–æ)
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask db upgrade

##################Docker
migrate-downgrade: ## –û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é Alembic/Flask-Migrate (–ª–æ–∫–∞–ª—å–Ω–æ)
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask db downgrade prev

migrate-docker: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@docker-compose exec web flask db upgrade

migrate-downgrade-docker: ## –û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@docker-compose exec web flask db downgrade prev

migrate-init-docker: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Flask-Migrate –≤ Docker
	@docker-compose exec web flask db init

migrate-create-docker: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é –≤ Docker
	@docker-compose exec web flask db migrate -m "Auto migration"

migrate-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
	@docker-compose exec web flask db current

migrate-history: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π
	@docker-compose exec web flask db history

migrate-downgrade-all: ## –û—Ç–∫–∞—Ç–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ –Ω–∞—á–∞–ª–∞ (base)
	@docker-compose exec web flask db downgrade base

migrate-clean: ## –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)
	@docker-compose exec web flask drop-db

migrate-reset: ## –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å: –æ—á–∏—Å—Ç–∏—Ç—å –ë–î, –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏, –Ω–∞–∫–∞—Ç–∏—Ç—å —Å–∏–¥—ã
	@echo "üîÑ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@docker-compose exec web flask drop-db
	@docker-compose exec web flask db migrate -m "Initial migration" || true
	@docker-compose exec web flask db upgrade
	@docker-compose exec web flask seed-db
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"

migrate-reset-local: ## –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –ª–æ–∫–∞–ª—å–Ω–æ (SQLite)
	@echo "üîÑ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask drop-db
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask db migrate -m "Initial migration" || true
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask db upgrade
	@unset DATABASE_URL && FLASK_APP=app.core:create_app .venv/bin/flask seed-db
	@echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"

# ----------------------------------------------------------

kill-port: ## –£–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É $(DEFAULT_PORT)
	@lsof -ti:$(DEFAULT_PORT) | xargs kill -9 2>/dev/null || echo "–ü–æ—Ä—Ç $(DEFAULT_PORT) —É–∂–µ —Å–≤–æ–±–æ–¥–µ–Ω"

kill-all-ports: ## –£–±–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 5000-5010
	@for port in {5000..5010}; do \
		lsof -ti:$$port | xargs kill -9 2>/dev/null || true; \
	done
	@echo "‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã 5000-5010 –æ—á–∏—â–µ–Ω—ã"

freeze: ## –ó–∞–º–æ—Ä–æ–∑–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@.venv/bin/pip freeze > requirements.txt
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ã –≤ requirements.txt"

# –î–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î
init-db-old:
	FLASK_APP=run.py flask init-db
	FLASK_APP=run.py flask seed-db

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞!!!!!!!!!!!!!!!!!!
clean-project: ## –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –æ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
	@echo "üßπ –û—á–∏—â–∞–µ–º –ø—Ä–æ–µ–∫—Ç –æ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	@python clean_project.py

clean-all: clean clean-project ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–∫—ç—à + –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã)
	@echo "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

archive: clean-project ## –°–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üì¶ –°–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
	@PROJECT_NAME=$$(basename $$(pwd)) && \
	ARCHIVE_NAME="$${PROJECT_NAME}_$(shell date +%Y%m%d_%H%M%S).tar.gz" && \
	tar --exclude='.git' --exclude='.venv' --exclude='venv' --exclude='node_modules' \
		--exclude='__pycache__' --exclude='*.pyc' --exclude='.pytest_cache' \
		--exclude='.coverage' --exclude='htmlcov' --exclude='.tox' \
		--exclude='.vscode' --exclude='.idea' --exclude='.DS_Store' \
		--exclude='*.log' --exclude='instance' --exclude='*.db' \
		--exclude='*.sqlite' --exclude='*.sqlite3' \
		-czf "$$ARCHIVE_NAME" . && \
	echo "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $$ARCHIVE_NAME" && \
	echo "üìä –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $$(du -h "$$ARCHIVE_NAME" | cut -f1)"

archive-clean: clean-all archive ## –û—á–∏—Å—Ç–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤

prepare-release: clean-project ## –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∫ —Ä–µ–ª–∏–∑—É
	@echo "üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Ä–µ–ª–∏–∑—É..."
	@echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—é"
	@echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
	@echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥: make lint"
	@echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã: make test"
	@echo "   3. –°–æ–∑–¥–∞–π—Ç–µ –∞—Ä—Ö–∏–≤: make archive"

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	@echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥..."
	@flake8
	@echo "‚úÖ –ö–æ–¥ –ø—Ä–æ–≤–µ—Ä–µ–Ω"

format: ## –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–¥..."
	@black .
	@isort .
	@echo "‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω"

lint-fix: format ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–æ–º
	@echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã..."
	@autopep8 --in-place --recursive --aggressive --aggressive .
	@echo "‚úÖ –ü—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
# ---------------------------
